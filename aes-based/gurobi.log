
Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 12:46:16 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 12:54:33 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 12:54:46 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:33:42 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:34:02 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:35:35 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:35:38 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:36:09 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:36:35 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:39:01 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:40:23 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:40:47 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:41:15 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:49:05 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:49:07 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:49:18 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:49:30 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:49:51 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:50:03 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:50:11 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:50:14 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:50:56 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:51:05 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:51:35 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:51:55 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:52:11 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:52:38 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:52:59 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:54:33 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:55:35 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:56:21 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:57:21 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 14:58:04 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:00:26 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:01:44 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:02:22 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:07:32 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:08:03 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Warning: excessive time spent in model updates.
Consider calling update less frequently.

Optimize a model with 56561 rows, 32480 columns and 146192 nonzeros
Variable types: 0 continuous, 32480 integer (32480 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+00]
  Objective range  [1e+02, 1e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Found heuristic solution: objective 0.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 0 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:08:33 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:12:28 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:14:11 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:14:39 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:14:47 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Warning: excessive time spent in model updates.
Consider calling update less frequently.

Optimize a model with 56561 rows, 32480 columns and 146192 nonzeros
Variable types: 0 continuous, 32480 integer (32480 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 2792 rows and 2280 columns
Presolve time: 0.36s
Presolved: 53769 rows, 30200 columns, 138600 nonzeros
Variable types: 0 continuous, 30200 integer (30200 binary)
Found heuristic solution: objective 4211.0000000
Found heuristic solution: objective 3114.0000000

Deterministic concurrent LP optimizer: primal and dual simplex
Showing first log only...

Presolved: 53769 rows, 30200 columns, 138600 nonzeros

Concurrent spin time: 0.00s

Solved with dual simplex

Root relaxation: objective 1.288809e+00, 795 iterations, 0.14 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    1.28881    0  386 3114.00000    1.28881   100%     -    0s
H    0     0                      29.0000000    1.28881  95.6%     -    1s
     0     0    2.73152    0  312   29.00000    2.73152  90.6%     -    1s
H    0     0                      26.0000000    2.73152  89.5%     -    1s
     0     0    3.61207    0  462   26.00000    3.61207  86.1%     -    1s
     0     0    3.66737    0  482   26.00000    3.66737  85.9%     -    2s
     0     0    3.68970    0  564   26.00000    3.68970  85.8%     -    2s
     0     0    3.69829    0  590   26.00000    3.69829  85.8%     -    2s
     0     0    3.70701    0  565   26.00000    3.70701  85.7%     -    2s
     0     0    3.70767    0  565   26.00000    3.70767  85.7%     -    2s
     0     0    4.07988    0  328   26.00000    4.07988  84.3%     -    2s
     0     0    4.12527    0  300   26.00000    4.12527  84.1%     -    2s
     0     0    4.14446    0  368   26.00000    4.14446  84.1%     -    2s
     0     0    4.16958    0  304   26.00000    4.16958  84.0%     -    2s
     0     0    4.16979    0  288   26.00000    4.16979  84.0%     -    3s
     0     0    4.28740    0  431   26.00000    4.28740  83.5%     -    3s
H    0     0                      24.0000000    4.28740  82.1%     -    3s
     0     0    4.29415    0  491   24.00000    4.29415  82.1%     -    3s
     0     0    4.29431    0  360   24.00000    4.29431  82.1%     -    3s
     0     0    4.37239    0  319   24.00000    4.37239  81.8%     -    4s
H    0     0                      22.0000000    4.37239  80.1%     -    4s
     0     0    4.37420    0  338   22.00000    4.37420  80.1%     -    4s
     0     0    4.37466    0  355   22.00000    4.37466  80.1%     -    4s
     0     0    4.53950    0  524   22.00000    4.53950  79.4%     -    4s
H    0     0                      20.0000000    4.53950  77.3%     -    5s
     0     0    4.55572    0  400   20.00000    4.55572  77.2%     -    5s
     0     0    4.62556    0  380   20.00000    4.62556  76.9%     -    5s
     0     0    4.78993    0  377   20.00000    4.78993  76.1%     -    5s
     0     0    4.79112    0  410   20.00000    4.79112  76.0%     -    5s
     0     0    4.79283    0  415   20.00000    4.79283  76.0%     -    5s
     0     0    4.79283    0  417   20.00000    4.79283  76.0%     -    6s
     0     0    4.87647    0  415   20.00000    4.87647  75.6%     -    6s
     0     0    4.87659    0  414   20.00000    4.87659  75.6%     -    6s
     0     0    4.92584    0  570   20.00000    4.92584  75.4%     -    6s
     0     0    4.92584    0  573   20.00000    4.92584  75.4%     -    7s
     0     0    4.92584    0  577   20.00000    4.92584  75.4%     -    8s
     0     0    4.92584    0  578   20.00000    4.92584  75.4%     -    8s
     0     0    4.92584    0  578   20.00000    4.92584  75.4%     -    8s
     0     2    4.92584    0  578   20.00000    4.92584  75.4%     -   16s
H   20     2                      16.0000000    9.29630  41.9%   237   16s
*   23     2               5      10.0000000   10.00000  0.00%   216   16s

Cutting planes:
  Gomory: 2
  Clique: 1
  MIR: 9
  Zero half: 1
  Mod-K: 4

Explored 24 nodes (12706 simplex iterations) in 16.94 seconds
Thread count was 3 (of 4 available processors)

Solution count 9: 10 16 20 ... 4211

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+01, best bound 1.000000000000e+01, gap 0.0000%

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:16:04 2017

Academic license - for non-commercial use only
Parameter OutputFlag unchanged
   Value: 1  Min: 0  Max: 1  Default: 1
Changed value of parameter Threads to 3
   Prev: 0  Min: 0  Max: 1024  Default: 0

Warning: excessive time spent in model updates.
Consider calling update less frequently.

Optimize a model with 60193 rows, 34496 columns and 156224 nonzeros
Variable types: 0 continuous, 34496 integer (34496 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 3060 rows and 2436 columns
Presolve time: 0.41s
Presolved: 57133 rows, 32060 columns, 147980 nonzeros
Variable types: 0 continuous, 32060 integer (32060 binary)
Found heuristic solution: objective 5694.0000000
Found heuristic solution: objective 3624.0000000

Deterministic concurrent LP optimizer: primal and dual simplex
Showing first log only...

Presolved: 57133 rows, 32060 columns, 147980 nonzeros

Concurrent spin time: 0.00s

Solved with dual simplex

Root relaxation: objective 1.292802e+00, 960 iterations, 0.16 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    1.29280    0  351 3624.00000    1.29280   100%     -    0s
H    0     0                      27.0000000    1.29280  95.2%     -    1s
     0     0    4.67575    0  516   27.00000    4.67575  82.7%     -    1s
     0     0    4.78931    0  462   27.00000    4.78931  82.3%     -    2s
     0     0    5.01710    0  548   27.00000    5.01710  81.4%     -    2s
     0     0    5.02052    0  515   27.00000    5.02052  81.4%     -    2s
     0     0    5.03038    0  528   27.00000    5.03038  81.4%     -    2s
     0     0    5.06410    0  546   27.00000    5.06410  81.2%     -    2s
     0     0    5.06565    0  546   27.00000    5.06565  81.2%     -    3s
     0     0    5.11286    0  546   27.00000    5.11286  81.1%     -    3s
     0     0    5.11502    0  617   27.00000    5.11502  81.1%     -    4s
     0     0    5.11502    0  605   27.00000    5.11502  81.1%     -    4s
     0     0    5.11502    0  612   27.00000    5.11502  81.1%     -    5s
     0     0    5.11502    0  612   27.00000    5.11502  81.1%     -    5s
     0     2    5.11502    0  612   27.00000    5.11502  81.1%     -   11s
*   52    14               6      26.0000000   21.00000  19.2%   251   12s

Cutting planes:
  Gomory: 4
  MIR: 3
  Zero half: 1
  Mod-K: 2

Explored 74 nodes (20158 simplex iterations) in 12.97 seconds
Thread count was 3 (of 4 available processors)

Solution count 4: 26 27 3624 5694 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.600000000000e+01, best bound 2.600000000000e+01, gap 0.0000%

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:28:51 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:28:55 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:33:24 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 15:43:48 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 16:19:13 2017

Academic license - for non-commercial use only

Gurobi 7.5.2 (mac64, Python) logging started Wed Dec 20 17:42:04 2017

Academic license - for non-commercial use only
